request.setCharacterEncoding("UTF-8"); // 제일 위에
request.setContentType("text/html; charset=UTF-8"); // post 방식시
response.setContentType("text/html; charset=UTF-8"); // 그냥
PrintWriter out = response.getWriter(); // out 쓸 때
request.getRequestDispatcher(WebContent 안에부터시작)/forward(request, response);
response.sendRedirect()
String.join(", ", 문자배열)
setAttribute(name, name변수)
값 가져올땐 형변환
하위.parent().css
<%@ include file="경로" %>
<form action"<%= contextPath %>/update.bo"> // contextPath + servlet 부 이름 지정한거 쓰면될듯. 

Dispatcher는 현재 request에 담긴 정보를 다음, 그 다음페이지에서도 볼 수 있게 저장하는 기능이고, sendRedirect는 모든 파라미터 정보를 제외하고 단순 페이지 호출을 하고 request와 response 객체가 새로 생겨남. -> 값 가지고 가야하면 Dispatcher 아니면 sendRedirect

<% %>(스크립틀릿) 안에 자바코드 작성 가능

-에러
에러나는곳 - <%@ errorPage="error.jsp"%>
error.jsp - <%@ isErrorPage="true"%>
or
web.xml - <error-page><error-code>404</error-code><location>/경로</location></error-page>

/ : 루트
./ : 현재위치
../ : 현재위치의 상단폴더

-history 함수
back()

-필터
init ->doFilter -> destroy
filter 파일로 생성

필터 안 코드
// 서블릿 수행 전 필터 동작하기
System.out.println("-- do Filter() 동작합니다. --");

//post
// 전송 방식이 post일 때 반드시 request에 대해서 인코딩
HttpServletRequest hrequest = (HttpServletRequest)request;
if(hrequest.getMethod().equalsIgnoreCase("post")) {
System.out.println("post 전송 시에만 encoding 됨");
request.setCharacterEncoding("utf-8");
}

//get
EncryptWrapper encWrapper = new EncryptWrapper((HttpServletRequest)request);

// FilterChian의 doFilter()는 다음 필터를 호출하거나, 마지막이면 servlet, jsp를 호출함
chain.doFilter(request, response);
		
// 서블릿 동작 후 코드 실행
System.out.println("-- doFilter() 이후 처리되는 코드입니다. --");

-드라이버
driver=oracle.jdbc.driver.OracleDriver
url=jdbc:oracle:thin:@127.0.0.1:1521:XE
user=server
password=server

-template
getConnection, close(con), close(stmt), close(rset), commit(con), rollback(con)

-wrapper
어렵다 ..

-ajax
@WebServlet(name = "JqAjaxServlet4", urlPatterns = { "/jqAjax4.do" })

