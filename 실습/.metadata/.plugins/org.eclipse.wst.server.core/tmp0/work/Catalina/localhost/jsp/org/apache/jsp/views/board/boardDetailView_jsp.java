/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-12-03 12:11:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.model.vo.*;
import java.util.*;
import member.model.vo.Member;

public final class boardDetailView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/board/../common/menubar.jsp", Long.valueOf(1574285738000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("board.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	Board b = (Board)request.getAttribute("board");

	//USER_NO,USER_NAME 형태로 넘어온 값을 나눠줌
	String[] bWriter = b.getbWriter().split(",");
	
	int userNo = Integer.parseInt(bWriter[0]);
	b.setbWriter(bWriter[1]);
	
	ArrayList<Reply> rlist = (ArrayList<Reply>)request.getAttribute("rlist");
	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("\t.outer {\r\n");
      out.write("\t\twidth:800px;\r\n");
      out.write("\t\theight:500px;\r\n");
      out.write("\t\tbackground:black;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\tmargin:auto;\r\n");
      out.write("\t\tmargin-top:50px;\r\n");
      out.write("\t}\r\n");
      out.write("\ttd {\r\n");
      out.write("\t\tborder:1px solid white;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.tableArea {\r\n");
      out.write("\t\tborder:1px solid white;\r\n");
      out.write("\t\twidth:450px;\r\n");
      out.write("\t\theight:350px;\r\n");
      out.write("\t\tmargin:auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#content {\r\n");
      out.write("\t\theight:230px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tbutton {\r\n");
      out.write("\t\theight:22px;\r\n");
      out.write("\t\twidth:80px;\r\n");
      out.write("\t\tbackground:yellowgreen;\r\n");
      out.write("\t\tborder:yellowgreen;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\tborder-radius:5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tbutton:hover{\r\n");
      out.write("\t\tcursor:pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#deleteBtn, #updateBtn {\r\n");
      out.write("\t\tbackground:orangered;\r\n");
      out.write("\t\tborder:orangered;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.replyArea {\r\n");
      out.write("\t\twidth: 800px;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\tbackground: black;\r\n");
      out.write("\t\tmargin:auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#replySelectArea {\r\n");
      out.write("\t\theigth:500px;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');

	// 2_1_1. session 객체에 담겨진 loginUser 정보를 변수에 담는다
	Member loginUser = (Member)session.getAttribute("loginUser");

	// 회원 가입 성공 메세지 출력용
	String msg = (String)session.getAttribute("msg");
	
	String contextPath = request.getContextPath();


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar msg = \"");
      out.print( msg );
      out.write("\";\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\tif(msg != \"null\"){\r\n");
      out.write("\t\t\talert(msg);\r\n");
      out.write("\t\t\t");
 session.removeAttribute("msg"); 
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("\tbody {\r\n");
      out.write("\t\tbackground: url('");
      out.print( request.getContextPath() );
      out.write("/resources/images/city1.PNG') no-repeat;\r\n");
      out.write("\t\tbackground-size : cover;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.loginArea > form, #userInfo {\r\n");
      out.write("\t\tfloat:right;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#memberJoinBtn, #loginBtn, #myPage, #logoutBtn {\r\n");
      out.write("\t\twidth:110px;\r\n");
      out.write("\t\theight:25px;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\tborder-radius:5px;\r\n");
      out.write("\t\tmargin-top:5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#memberJoinBtn, #myPage {\r\n");
      out.write("\t\tbackground:yellowgreen;\r\n");
      out.write("\t\tborder:yellowgreen;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#loginBtn, #logoutBtn {\r\n");
      out.write("\t\tbackground:orangered;\r\n");
      out.write("\t\tborder:orangered;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#memberJoinBtn:hover, #loginBtn:hover, #myPage:hover, #logoutBtn:hover {\r\n");
      out.write("\t\tcursor:pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.wrap {\r\n");
      out.write("\t\tbackground:black;\r\n");
      out.write("\t\twidth:100%;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.nav {\r\n");
      out.write("\t\twidth:600px;\r\n");
      out.write("\t\tmargin:auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.menu {\r\n");
      out.write("\t\tbackground:black;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\ttext-align:center;\r\n");
      out.write("\t\tvertical-align:middle;\r\n");
      out.write("\t\twidth:150px;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t\tdisplay:table-cell;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.menu:hover {\r\n");
      out.write("\t\tbackground:darkgray;\r\n");
      out.write("\t\tcolor:orangered;\r\n");
      out.write("\t\tfont-weight:bold;\r\n");
      out.write("\t\tcursor:pointer;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1 align=\"center\">Welcome to JSP World!!</h1>\r\n");
      out.write("\t<div class=\"loginArea\">\r\n");
      out.write("\t<!-- 2_1. 로그인이 안 되어있는 경우와 되어 있는 경우가 다르게 보여야 하므로 if문 추가 -->\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
 if(loginUser == null) { 
      out.write("\r\n");
      out.write("\t\t<!-- 1_1. 로그인 관련 폼 만들기 -->\r\n");
      out.write("\t\t<form id=\"loginForm\" action=\"");
      out.print( request.getContextPath() );
      out.write("/login.me\" method=\"post\" onsubmit=\"return validate();\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label>ID : </label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"userId\" id=\"userId\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label>PWD : </label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"password\" name=\"userPwd\" id=\"userPwd\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<div class=\"btns\" align=\"center\">\r\n");
      out.write("\t\t\t<!-- form 태그 안에 있는 버튼의 디폴트 type은 submit이므로 다른 동작을 하고 싶을 때는 type=\"button\" 반드시 표시 -->\r\n");
      out.write("\t\t\t\t<button id=\"memberJoinBtn\" onclick=\"memberJoin();\" type=\"button\">회원가입</button>\r\n");
      out.write("\t\t\t\t<button id=\"loginBtn\" type=\"submit\">로그인</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\t\r\n");
      out.write("\t\t<!-- 로그인이 성공적으로 됐을 경우 -->\r\n");
      out.write("\t\t");
} else { 
      out.write("\r\n");
      out.write("\t\t<div id=\"userInfo\">\r\n");
      out.write("\t\t\t<label>");
      out.print( loginUser.getUserName() );
      out.write("님의 방문을 환영합니다.</label>\r\n");
      out.write("\t\t\t<div class=\"btns\" align=\"center\">\r\n");
      out.write("\t\t\t\t<button id=\"myPage\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/views/member/myPage.jsp';\">정보수정</button>\r\n");
      out.write("\t\t\t\t<button id=\"logoutBtn\" onclick=\"logout();\">로그아웃</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// 1_2. validate() 작성\r\n");
      out.write("\t\tfunction validate(){\r\n");
      out.write("\t\t\tif($(\"#userId\").val().trim().length == 0){\r\n");
      out.write("\t\t\t\talert('아이디를 입력하세요');\r\n");
      out.write("\t\t\t\t$(\"#userId\").focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(\"#userPwd\").val().trim().length == 0){\r\n");
      out.write("\t\t\t\talert('비밀번호를 입력하세요');\r\n");
      out.write("\t\t\t\t$(\"#userPwd\").focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t\t// 여기까지 작성했으면 LoginServlet 만들러 가기~~~~\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 2_3. logout() 작성하기\r\n");
      out.write("\t\tfunction logout(){\r\n");
      out.write("\t\t\tlocation.href = '");
      out.print( request.getContextPath() );
      out.write("/logout.me';\r\n");
      out.write("\t\t\t// logout 버튼을 눌렀을 경우 logout.me url과 매핑되는 servlet으로 이동하여\r\n");
      out.write("\t\t\t// logout 처리 진행\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 3. 회원가입 버튼을 눌렀을 경우 회원 가입 페이지로 이동하는 memberJoin() 함수 작성\r\n");
      out.write("\t\tfunction memberJoin(){\r\n");
      out.write("\t\t\tlocation.href = \"");
      out.print(request.getContextPath() );
      out.write("/views/member/memberJoinForm.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<br clear=\"both\">\r\n");
      out.write("\t<br>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"wrap\">\r\n");
      out.write("\t\t<div class=\"nav\">\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goMain();\">HOME</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goNotice();\">공지사항</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goBoard();\">게시판</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goThumbnail();\">사진게시판</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction goMain(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 1. 공지사항\r\n");
      out.write("\t\tfunction goNotice(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/list.no\";\r\n");
      out.write("\t\t\t// NoticeListServlet 만들기~~\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 2. 게시판\r\n");
      out.write("\t\tfunction goBoard(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( contextPath );
      out.write("/list.bo\";\r\n");
      out.write("\t\t\t// BoardListServlet 만들기~~\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 3. 사진 게시판\r\n");
      out.write("\t\tfunction goThumbnail(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( contextPath );
      out.write("/list.th\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<div class=\"outer\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<h2 align=\"center\">게시판 상세보기</h2>\r\n");
      out.write("\t\t<div class=\"tableArea\">\r\n");
      out.write("\t\t\t<table align=\"center\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>분야</td>\r\n");
      out.write("\t\t\t\t\t<td><span>");
      out.print( b.getCategory() );
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t<td>제목</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"3\"><span>");
      out.print( b.getbTitle() );
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>작성자</td>\r\n");
      out.write("\t\t\t\t\t<td><span>");
      out.print( b.getbWriter() );
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t<td>조회수</td>\r\n");
      out.write("\t\t\t\t\t<td><span>");
      out.print( b.getbCount() );
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t<td>작성일</td>\r\n");
      out.write("\t\t\t\t\t<td><span>");
      out.print( b.getModifyDate() );
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"6\">내용</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"6\"><p id=\"content\">");
      out.print( (b.getbContent()).replace("\r\n", "<br>") );
      out.write("</p></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div align=\"center\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"returnToList();\">목록으로</button>\r\n");
      out.write("\t\t\t\t<!-- 로그인한 회원이 글쓴이인 경우 -->\r\n");
      out.write("\t\t\t\t");
 if(userNo == loginUser.getUserNo()) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<button id=\"updateBtn\" type=\"button\" onclick=\"updateBoard();\">수정</button>\r\n");
      out.write("\t\t\t\t\t<button id=\"deleteBtn\" type=\"button\" onclick=\"deleteBoard();\">삭제</button>\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- ajax를 이용한 댓글 기능 구현 -->\r\n");
      out.write("\t<div class=\"replyArea\">\r\n");
      out.write("\t\t<!-- 댓글 작성하는 부분 -->\r\n");
      out.write("\t\t<div class==\"replyWriterArea\">\r\n");
      out.write("\t\t\t<table align=\"center\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>댓글 작성</td>\r\n");
      out.write("\t\t\t\t\t<td><textarea rows=\"3\" cols=\"80\" id=\"replyContent\"></textarea>\r\n");
      out.write("\t\t\t\t\t<td><button id=\"addReply\">댓글 등록</button></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 불러온 댓글 리스트 보여주는 부분 -->\r\n");
      out.write("\t\t<div id=\"replySelectArea\">\r\n");
      out.write("\t\t\t<table id=\"replySelectTable\" border=\"1\" align=\"center\">\r\n");
      out.write("\t\t\t\t");
 if(rlist != null) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 for(Reply r : rlist) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td width=\"100px\">");
      out.print( r.getUserName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td width=\"400px\">");
      out.print( r.getrContent() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td width=\"200px\">");
      out.print( r.getCreateDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 수정/삭제를 위해 -->\r\n");
      out.write("\t<form action=\"\" id=\"detailForm\" method=\"post\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"bId\" value=\"");
      out.print( b.getbId() );
      out.write("\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction returnToList(){\r\n");
      out.write("\t\t\tlocation.href = \"");
      out.print( contextPath );
      out.write("/list.bo\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction updateBoard(){\r\n");
      out.write("\t\t\t$(\"#detailForm\").attr(\"action\", \"");
      out.print( contextPath );
      out.write("/updateForm.bo\");\r\n");
      out.write("\t\t\t$(\"#detailForm\").submit();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction deleteBoard(){\r\n");
      out.write("\t\t\t$(\"#detailForm\").attr(\"action\", \"");
      out.print( contextPath );
      out.write("/delete.bo\");\r\n");
      out.write("\t\t\t$(\"#detailForm\").submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// addReply 버튼 클릭 시 댓글 달기 기능을 실행했을 때 비동기적으로 새로 갱신된 댓글 리스트를 테이블에 적용시키는 ajax\r\n");
      out.write("\t\t$(\"#addReply\").click(function() {\r\n");
      out.write("\t\t\tvar writer = ");
      out.print( loginUser.getUserNo() );
      out.write(";\r\n");
      out.write("\t\t\tvar bId = ");
      out.print( b.getbId() );
      out.write(";\r\n");
      out.write("\t\t\tvar content = $(\"#replyContent\").val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"insertReply.bo\",\r\n");
      out.write("\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\tdata : {writer:writer,\r\n");
      out.write("\t\t\t\t\t\tcontent:content,\r\n");
      out.write("\t\t\t\t\t\tbid:bId},\r\n");
      out.write("\t\t\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\t\t\tvar $table = $(\"#replySelectTable\");\r\n");
      out.write("\t\t\t\t\t$table.html(\"\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$.each(data, function(index, value) {\r\n");
      out.write("\t\t\t\t\t\tvar $tr = $(\"<tr>\");\r\n");
      out.write("\t\t\t\t\t\tvar $writer = $(\"<td>\").text(value.userName).css(\"width\", \"100\");\r\n");
      out.write("\t\t\t\t\t\tvar $content = $(\"<td>\").text(value.rContent).css(\"width\", \"400\");\r\n");
      out.write("\t\t\t\t\t\tvar $bid = $(\"<td>\").text(value.refBid).css(\"width\", \"200\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$tr.append($writer);\r\n");
      out.write("\t\t\t\t\t\t$tr.append($content);\r\n");
      out.write("\t\t\t\t\t\t$tr.append($bid);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$(\"#replyContent\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$table.append($tr);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t// 다른 방법\r\n");
      out.write("\t\t\t\t\t/*\r\n");
      out.write("\t\t\t\t\t\tfor(var key in data) {\r\n");
      out.write("\t\t\t\t\t\t\tvar $tr = $(\"<tr>\");\r\n");
      out.write("\t\t\t\t\t\t\tvar $writerTd = $(\"<td>\").text(data[key].userName);\r\n");
      out.write("\t\t\t\t\t\t\tvar $contentId = $(\"<td>\").text(data[key].rContent);\r\n");
      out.write("\t\t\t\t\t\t\tvar $dateTd = $(\"<td>\").text(data[key].createDate);\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t$tr.append($writerTd);\r\n");
      out.write("\t\t\t\t\t\t\t$tr.append($contentId);\r\n");
      out.write("\t\t\t\t\t\t\t$tr.append($dateTd);\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t$replyTable.append($tr);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t */\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function() {\r\n");
      out.write("\t\t\t\t\tconsole.log('ajax 통신 실패');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
